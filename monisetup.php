<?
// Copyright 2003 by Won-Kyu Park <wkpark at kldp.org> all rights reserved.
// distributable under GPL see COPYING 
// $Id$

class MoniConfig {
  function MoniConfig($configfile="config.php") {
    if (file_exists($configfile)) {
      $this->config=$this->_getConfig($configfile);
      $lines=file($configfile);
      $this->rawconfig=$this->_rawConfigLines($lines);
    } else {
      $this->config=array();
      $this->rawconfig=array();
    }
  }

  function getDefaultConfig() {
    $this->config=$this->_getConfig("config.php.default");
    $lines=file("config.php.default");
    $this->rawconfig=$this->_rawConfigLines($lines);
    $this->config=array_merge($this->config,$this->_getHostConfig());

  }
  function _getHostConfig() {
    $tempnam="/tmp/".time();
    if ($db=@dba_open($tempnam,"n","db2"))
      $config[dba_type]="db2";
    else if ($db=@dba_open($tempnam,"n","db3"))
      $config[dba_type]="db3";
    else if ($db=@dba_open($tempnam,"n","gdbm"))
      $config[dba_type]="gdbm";

    dba_close($db);
    preg_match("/Apache\/2\.0\./",$_SERVER[SERVER_SOFTWARE],$match);

    if ($match) {
      $config[query_prefix]='"?"';
      $config[kbd_script]='$url_prefix."/css/kbd2.js";';
    }
    return $config;
  }

  function setConfig($config) {
    $this->config=$config;
  }

  function setRawConfig($config) {
    $this->rawconfig=$config;
  }

  function _getConfig($configfile) {
    if (!file_exists($configfile))
      return array();

    $org=array();
    $org=get_defined_vars();
    include($configfile);
    $new=get_defined_vars();

    return array_diff($new,$org);
  }

  function _rawConfigLines($lines) {
    foreach ($lines as $line) {
      if ($line[0] != '$') continue;

      $d=explode("=",substr($line,1),2);

      if ($d[0]) {
        $val=preg_replace("/\s*;$/","",trim($d[1]));
        $config[$d[0]]=$val;
      }
    }
    return $config;
  }

  function _getFormConfig($config,$mode=0) {
    $conf=array();
    while (list($key,$val) = each($config)) {
      $val=stripslashes($val);
      if (!$val) $val="''";
      if (!$mode) {
        eval("\$dum=$val;");
        eval("\$$key=$val;");
        $conf[$key]=$dum;
      } else {
        $conf[$key]=$val;
      }
      #print("$mode:\$$key=$val;<br/>");
    }
    return $conf;
  }

  function _genRawConfig($config) {
    $lines=array("<?php\n","# automatically generated by monisetup\n");
    while (list($key,$val) = each($config)) {
      if ($key=='admin_passwd' or $key=='purge_passwd')
         $val="'".crypt($val,md5(time()))."'";
      $lines[]="\$$key=$val;\n";
    }
    $lines[]="?>\n";
    return $lines;
  }
}

function checkConfig($config) {
  if (!file_exists("config.php") && !is_writable(".")) {
     print "<h3><font color=red>Change current directory permission to write a generated config.php</font></h3>\n";
     print "
<pre class='console'>
<font color='green'>$</font> chmod a+w .
</pre>
";
     $fatal=1;
  }

  if (file_exists("config.php")) {
    if (!$fatal && !is_writable($config[data_dir])) {
       print "<h3><font color=red>$config[data_dir] directory is not writable</font></h3>\n";
       $error=1;
    }
    if (!$fatal && !is_writable($config[text_dir])) {
       print "<h3><font color=red>$config[text_dir] directory is not writable</font> :( </h3>\n";
      $error=1;
    } else
       print "<h3><font color=blue>$config[text_dir] directory is writable</font> :)</h3>\n";

    if (!$fatal && !is_writable($config[upload_dir])) {
       print "<h3><font color=red>$config[upload_dir] directory is not writable</font> :(</h3>\n";
      $error=1;
    } else
       print "<h3><font color=blue>$config[upload_dir] directory is writable</font> :)</h3>\n";
  }

  if ($fatal)
     exit;

}


print <<<EOF
<html><head><title>Moni Setup</title>
<style type="text/css">
//<!--
body {font-family:Tahoma;}
h1,h2,h3,h4,h5 {
  font-family:Tahoma;
/* background-color:#E07B2A; */
  padding-left:6px;
  border-bottom:1px solid #999;
}
table.wiki {
/* background-color:#E2ECE5;*/
/* border-collapse: collapse; */
  border: 0px outset #E2ECE5;
}

pre.console {
  background-color:#000;
  color:white;
  width:80%;
}

td.wiki {
  background-color:#E2ECE2;
/* border-collapse: collapse; */
  border: 0px inset #E2ECE5;
}

//-->
</style>
</head>
<body>
EOF;

print "<h2>Moni Wiki setup</h2>\n";

if (file_exists("config.php") && !is_writable("config.php")) {
  print "<h2><font color='red'>'config.php' is not writable !!</font></h2>\n";
  print "Please change 'config.php' permission as 666 first to write settings<br />\n";

  return;
}

$Config=new MoniConfig();

$config=$HTTP_POST_VARS[config];
$update=$HTTP_POST_VARS[update];

if ($_SERVER[REQUEST_METHOD]=="POST" && $config) {
  $conf=$Config->_getFormConfig($config);
  $rawconfig=$Config->_getFormConfig($config,1);
  $config=$conf;

  if ($Config->config[admin_passwd]) {
    if (crypt($oldpasswd,$Config->config[admin_passwd]) != 
      $Config->config[admin_passwd]) {
        print "<h3><font color='red'>Invalid password error !!!</font></h3>\n";
        print "If you can't remember your admin password, delete password entry in the 'config.php' and restart 'monisetup'<br />\n";
        $invalid=1;
    } else {
        $rawconfig[admin_passwd]=$newpasswd;
    }
  } else {
    if ($newpasswd)
       $rawconfig[admin_passwd]=$newpasswd;
  }

  if ($update) {
    print "<h3>Updated Configutations for this $config[sitename]</h3>\n";
    $lines=$Config->_genRawConfig($rawconfig);
    print "<pre class='console'>\n";
    $rawconf=join("",$lines);
    #
    ob_start();
    highlight_string($rawconf);
    $highlighted= ob_get_contents();
    ob_end_clean();
    #print str_replace("<","&lt;",$rawconf);
    print $highlighted;
    print "</pre>\n";

    if (!$invalid && (is_writable("config.php") || !file_exists("config.php"))) {
      $fp=fopen("config.php","w");
      fwrite($fp,$rawconf);
      fclose($fp);
      chmod("config.php",0666);
      print "<h3><font color='blue'>Configurations are saved successfully</font></h3>\n";
      print "Please change 'config.php' permission as 644.<br />\n";
    } else {
      if (!$invalid) {
        print "<h3><font color='red'>Can't write settings to 'config.php'</font></h3>\n";
        print "Please change 'config.php' permission as 666 first to write settings<br />\n";
        print "&nbsp;&nbsp; or change directory permission as 777 to write settings<br />\n";
	print <<<AS
<pre class='console'>
<font color='green'>$</font> chmod a+w config.php
or
<font color='green'>$</font> chmod a+w .
</pre>
AS;
      } else {
        print "<h3><font color='red'>You Can't write this settings to 'config.php'</font></h3>\n";
      }
    }
  } else
  print "<h3>Read current settings for this $config[sitename]</h3>\n";
#  $rawconfig=rawConfig($lines);
} else {
  # read settings

  if (!$Config->config) {
    $Config->getDefaultConfig();
    $config=$Config->config;

    checkConfig($config);

    $rawconfig=$Config->rawconfig;
    print "<h2>Read default settings</h2>\n";
    print "<h3>Welcome ! This is your first installation</h3>\n";
  } else {
    $config=$Config->config;
    checkConfig($config);
    $rawconfig=$Config->rawconfig;
    print "<h3>Read current settings for this $config[sitename]</h3>\n";
  }
}

print "<table class='wiki' align=center border=1 cellpadding=2 cellspacing=2>\n";
while (list($key,$val) = each($config)) {
  if ($key != "admin_passwd" && $key != "purge_passwd")
  print "<tr><td>$$key</td><td>$val</td></tr>\n";
}
print "</table>\n";

if ($REQUEST_METHOD!="POST") {
  print "<h3>Change your settings</h3>\n";
  print "<form method='post' action=''>\n";
  print "<table align=center border=1 cellpadding=2 cellspacing=2>\n";
  while (list($key,$val) = each($rawconfig)) {
    if ($key != "admin_passwd") {
      $val=str_replace('"',"&#34;",$val);
      print "<tr><td>$$key</td>";
      print "<td><input name='config[$key]' value=\"$val\" size='30'></td></tr>\n";
    }
  }

  if (!$config[admin_passwd]) {
    print "<tr><td><b>\$admin_passwd</b></td>";
    print "<td><input type='password' name='newpasswd' size='30'></td></tr>\n";
  } else  {
    print "<tr><td><b>Old password</b></td>";
    print "<td><input type='password' name='oldpasswd' size='30'></td></tr>\n";
    print "<tr><td><b>New password</b></td>";
    print "<td><input type='password' name='newpasswd' size='30'></td></tr>\n";
  }
  print "<tr><td colspan=2>";
  print "<input type='submit' value='preview'> ";
  print "<input type='submit' name='update' value='update'></td></tr>\n";
  print "</table></form>\n";
}

?>
